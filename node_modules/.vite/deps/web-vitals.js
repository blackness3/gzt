import "./chunk-TFWDKVI3.js";

// node_modules/.pnpm/web-vitals@3.1.1/node_modules/web-vitals/dist/web-vitals.js
var e;
var n;
var t;
var r;
var i;
var a = -1;
var o = function(e3) {
  addEventListener("pageshow", function(n2) {
    n2.persisted && (a = n2.timeStamp, e3(n2));
  }, true);
};
var c = function() {
  return window.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0];
};
var u = function() {
  var e3 = c();
  return e3 && e3.activationStart || 0;
};
var f = function(e3, n2) {
  var t2 = c(), r2 = "navigate";
  return a >= 0 ? r2 = "back-forward-cache" : t2 && (r2 = document.prerendering || u() > 0 ? "prerender" : document.wasDiscarded ? "restore" : t2.type.replace(/_/g, "-")), { name: e3, value: void 0 === n2 ? -1 : n2, rating: "good", delta: 0, entries: [], id: "v3-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12), navigationType: r2 };
};
var s = function(e3, n2, t2) {
  try {
    if (PerformanceObserver.supportedEntryTypes.includes(e3)) {
      var r2 = new PerformanceObserver(function(e4) {
        Promise.resolve().then(function() {
          n2(e4.getEntries());
        });
      });
      return r2.observe(Object.assign({ type: e3, buffered: true }, t2 || {})), r2;
    }
  } catch (e4) {
  }
};
var d = function(e3, n2, t2, r2) {
  var i2, a2;
  return function(o2) {
    n2.value >= 0 && (o2 || r2) && ((a2 = n2.value - (i2 || 0)) || void 0 === i2) && (i2 = n2.value, n2.delta = a2, n2.rating = function(e4, n3) {
      return e4 > n3[1] ? "poor" : e4 > n3[0] ? "needs-improvement" : "good";
    }(n2.value, t2), e3(n2));
  };
};
var l = function(e3) {
  requestAnimationFrame(function() {
    return requestAnimationFrame(function() {
      return e3();
    });
  });
};
var v = function(e3) {
  var n2 = function(n3) {
    "pagehide" !== n3.type && "hidden" !== document.visibilityState || e3(n3);
  };
  addEventListener("visibilitychange", n2, true), addEventListener("pagehide", n2, true);
};
var p = function(e3) {
  var n2 = false;
  return function(t2) {
    n2 || (e3(t2), n2 = true);
  };
};
var m = -1;
var h = function() {
  return "hidden" !== document.visibilityState || document.prerendering ? 1 / 0 : 0;
};
var g = function(e3) {
  "hidden" === document.visibilityState && m > -1 && (m = "visibilitychange" === e3.type ? e3.timeStamp : 0, T());
};
var y = function() {
  addEventListener("visibilitychange", g, true), addEventListener("prerenderingchange", g, true);
};
var T = function() {
  removeEventListener("visibilitychange", g, true), removeEventListener("prerenderingchange", g, true);
};
var E = function() {
  return m < 0 && (m = h(), y(), o(function() {
    setTimeout(function() {
      m = h(), y();
    }, 0);
  })), { get firstHiddenTime() {
    return m;
  } };
};
var C = function(e3) {
  document.prerendering ? addEventListener("prerenderingchange", function() {
    return e3();
  }, true) : e3();
};
var L = function(e3, n2) {
  n2 = n2 || {}, C(function() {
    var t2, r2 = [1800, 3e3], i2 = E(), a2 = f("FCP"), c2 = s("paint", function(e4) {
      e4.forEach(function(e5) {
        "first-contentful-paint" === e5.name && (c2.disconnect(), e5.startTime < i2.firstHiddenTime && (a2.value = Math.max(e5.startTime - u(), 0), a2.entries.push(e5), t2(true)));
      });
    });
    c2 && (t2 = d(e3, a2, r2, n2.reportAllChanges), o(function(i3) {
      a2 = f("FCP"), t2 = d(e3, a2, r2, n2.reportAllChanges), l(function() {
        a2.value = performance.now() - i3.timeStamp, t2(true);
      });
    }));
  });
};
var b = function(e3, n2) {
  n2 = n2 || {}, L(p(function() {
    var t2, r2 = [0.1, 0.25], i2 = f("CLS", 0), a2 = 0, c2 = [], u2 = function(e4) {
      e4.forEach(function(e5) {
        if (!e5.hadRecentInput) {
          var n3 = c2[0], t3 = c2[c2.length - 1];
          a2 && e5.startTime - t3.startTime < 1e3 && e5.startTime - n3.startTime < 5e3 ? (a2 += e5.value, c2.push(e5)) : (a2 = e5.value, c2 = [e5]);
        }
      }), a2 > i2.value && (i2.value = a2, i2.entries = c2, t2());
    }, p2 = s("layout-shift", u2);
    p2 && (t2 = d(e3, i2, r2, n2.reportAllChanges), v(function() {
      u2(p2.takeRecords()), t2(true);
    }), o(function() {
      a2 = 0, i2 = f("CLS", 0), t2 = d(e3, i2, r2, n2.reportAllChanges), l(function() {
        return t2();
      });
    }), setTimeout(t2, 0));
  }));
};
var w = { passive: true, capture: true };
var S = new Date();
var A = function(r2, i2) {
  e || (e = i2, n = r2, t = new Date(), F(removeEventListener), I());
};
var I = function() {
  if (n >= 0 && n < t - S) {
    var i2 = { entryType: "first-input", name: e.type, target: e.target, cancelable: e.cancelable, startTime: e.timeStamp, processingStart: e.timeStamp + n };
    r.forEach(function(e3) {
      e3(i2);
    }), r = [];
  }
};
var P = function(e3) {
  if (e3.cancelable) {
    var n2 = (e3.timeStamp > 1e12 ? new Date() : performance.now()) - e3.timeStamp;
    "pointerdown" == e3.type ? function(e4, n3) {
      var t2 = function() {
        A(e4, n3), i2();
      }, r2 = function() {
        i2();
      }, i2 = function() {
        removeEventListener("pointerup", t2, w), removeEventListener("pointercancel", r2, w);
      };
      addEventListener("pointerup", t2, w), addEventListener("pointercancel", r2, w);
    }(n2, e3) : A(n2, e3);
  }
};
var F = function(e3) {
  ["mousedown", "keydown", "touchstart", "pointerdown"].forEach(function(n2) {
    return e3(n2, P, w);
  });
};
var M = function(t2, i2) {
  i2 = i2 || {}, C(function() {
    var a2, c2 = [100, 300], u2 = E(), l2 = f("FID"), m2 = function(e3) {
      e3.startTime < u2.firstHiddenTime && (l2.value = e3.processingStart - e3.startTime, l2.entries.push(e3), a2(true));
    }, h2 = function(e3) {
      e3.forEach(m2);
    }, g2 = s("first-input", h2);
    a2 = d(t2, l2, c2, i2.reportAllChanges), g2 && v(p(function() {
      h2(g2.takeRecords()), g2.disconnect();
    })), g2 && o(function() {
      var o2;
      l2 = f("FID"), a2 = d(t2, l2, c2, i2.reportAllChanges), r = [], n = -1, e = null, F(addEventListener), o2 = m2, r.push(o2), I();
    });
  });
};
var k = 0;
var D = 1 / 0;
var x = 0;
var B = function(e3) {
  e3.forEach(function(e4) {
    e4.interactionId && (D = Math.min(D, e4.interactionId), x = Math.max(x, e4.interactionId), k = x ? (x - D) / 7 + 1 : 0);
  });
};
var R = function() {
  return i ? k : performance.interactionCount || 0;
};
var H = function() {
  "interactionCount" in performance || i || (i = s("event", B, { type: "event", buffered: true, durationThreshold: 0 }));
};
var N = 0;
var O = function() {
  return R() - N;
};
var q = [];
var j = {};
var _ = function(e3) {
  var n2 = q[q.length - 1], t2 = j[e3.interactionId];
  if (t2 || q.length < 10 || e3.duration > n2.latency) {
    if (t2)
      t2.entries.push(e3), t2.latency = Math.max(t2.latency, e3.duration);
    else {
      var r2 = { id: e3.interactionId, latency: e3.duration, entries: [e3] };
      j[r2.id] = r2, q.push(r2);
    }
    q.sort(function(e4, n3) {
      return n3.latency - e4.latency;
    }), q.splice(10).forEach(function(e4) {
      delete j[e4.id];
    });
  }
};
var z = function(e3, n2) {
  n2 = n2 || {}, C(function() {
    var t2 = [200, 500];
    H();
    var r2, i2 = f("INP"), a2 = function(e4) {
      e4.forEach(function(e5) {
        (e5.interactionId && _(e5), "first-input" === e5.entryType) && (!q.some(function(n4) {
          return n4.entries.some(function(n5) {
            return e5.duration === n5.duration && e5.startTime === n5.startTime;
          });
        }) && _(e5));
      });
      var n3, t3 = (n3 = Math.min(q.length - 1, Math.floor(O() / 50)), q[n3]);
      t3 && t3.latency !== i2.value && (i2.value = t3.latency, i2.entries = t3.entries, r2());
    }, c2 = s("event", a2, { durationThreshold: n2.durationThreshold || 40 });
    r2 = d(e3, i2, t2, n2.reportAllChanges), c2 && (c2.observe({ type: "first-input", buffered: true }), v(function() {
      a2(c2.takeRecords()), i2.value < 0 && O() > 0 && (i2.value = 0, i2.entries = []), r2(true);
    }), o(function() {
      q = [], N = R(), i2 = f("INP"), r2 = d(e3, i2, t2, n2.reportAllChanges);
    }));
  });
};
var G = {};
var J = function(e3, n2) {
  n2 = n2 || {}, C(function() {
    var t2, r2 = [2500, 4e3], i2 = E(), a2 = f("LCP"), c2 = function(e4) {
      var n3 = e4[e4.length - 1];
      if (n3) {
        var r3 = Math.max(n3.startTime - u(), 0);
        r3 < i2.firstHiddenTime && (a2.value = r3, a2.entries = [n3], t2());
      }
    }, m2 = s("largest-contentful-paint", c2);
    if (m2) {
      t2 = d(e3, a2, r2, n2.reportAllChanges);
      var h2 = p(function() {
        G[a2.id] || (c2(m2.takeRecords()), m2.disconnect(), G[a2.id] = true, t2(true));
      });
      ["keydown", "click"].forEach(function(e4) {
        addEventListener(e4, h2, true);
      }), v(h2), o(function(i3) {
        a2 = f("LCP"), t2 = d(e3, a2, r2, n2.reportAllChanges), l(function() {
          a2.value = performance.now() - i3.timeStamp, G[a2.id] = true, t2(true);
        });
      });
    }
  });
};
var K = function e2(n2) {
  document.prerendering ? C(function() {
    return e2(n2);
  }) : "complete" !== document.readyState ? addEventListener("load", function() {
    return e2(n2);
  }, true) : setTimeout(n2, 0);
};
var Q = function(e3, n2) {
  n2 = n2 || {};
  var t2 = [800, 1800], r2 = f("TTFB"), i2 = d(e3, r2, t2, n2.reportAllChanges);
  K(function() {
    var a2 = c();
    if (a2) {
      var s2 = a2.responseStart;
      if (s2 <= 0 || s2 > performance.now())
        return;
      r2.value = Math.max(s2 - u(), 0), r2.entries = [a2], i2(true), o(function() {
        r2 = f("TTFB", 0), (i2 = d(e3, r2, t2, n2.reportAllChanges))(true);
      });
    }
  });
};
export {
  b as getCLS,
  L as getFCP,
  M as getFID,
  z as getINP,
  J as getLCP,
  Q as getTTFB,
  b as onCLS,
  L as onFCP,
  M as onFID,
  z as onINP,
  J as onLCP,
  Q as onTTFB
};
//# sourceMappingURL=web-vitals.js.map
