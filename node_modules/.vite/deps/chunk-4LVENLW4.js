import {
  Typography_default,
  init_Typography
} from "./chunk-C67TEYHN.js";
import {
  ButtonBase_default,
  init_ButtonBase
} from "./chunk-XI3SU7JQ.js";
import {
  createSvgIcon,
  init_createSvgIcon
} from "./chunk-AAGGCZUR.js";
import {
  init_base
} from "./chunk-FW7XUO3N.js";
import {
  composeClasses,
  emphasize,
  generateUtilityClass,
  generateUtilityClasses,
  init_esm,
  init_esm2,
  init_generateUtilityClass,
  init_styled,
  init_useThemeProps,
  integerPropType_default,
  styled_default,
  useThemeProps2 as useThemeProps
} from "./chunk-JZHFBPOR.js";
import {
  require_prop_types
} from "./chunk-7SDWSBA6.js";
import {
  clsx_m_default,
  init_clsx_m
} from "./chunk-463IUOES.js";
import {
  require_react_is
} from "./chunk-27W2IUBU.js";
import {
  require_jsx_runtime
} from "./chunk-DOX2A7CZ.js";
import {
  _objectWithoutPropertiesLoose,
  init_objectWithoutPropertiesLoose
} from "./chunk-3A2PB45J.js";
import {
  _extends,
  init_extends
} from "./chunk-LHD2FDYG.js";
import {
  require_react
} from "./chunk-QSTP2CRO.js";
import {
  __esm,
  __toESM
} from "./chunk-TFWDKVI3.js";

// node_modules/.pnpm/@mui+material@5.11.4_@emotion+react@11.10.5_@emotion+styled@11.10.5_@types+react@18.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/MoreHoriz.js
var React, import_jsx_runtime, MoreHoriz_default;
var init_MoreHoriz = __esm({
  "node_modules/.pnpm/@mui+material@5.11.4_@emotion+react@11.10.5_@emotion+styled@11.10.5_@types+react@18.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/internal/svg-icons/MoreHoriz.js"() {
    React = __toESM(require_react());
    init_createSvgIcon();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    MoreHoriz_default = createSvgIcon((0, import_jsx_runtime.jsx)("path", {
      d: "M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
    }), "MoreHoriz");
  }
});

// node_modules/.pnpm/@mui+material@5.11.4_@emotion+react@11.10.5_@emotion+styled@11.10.5_@types+react@18.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js
function BreadcrumbCollapsed(props) {
  const ownerState = props;
  return (0, import_jsx_runtime2.jsx)("li", {
    children: (0, import_jsx_runtime2.jsx)(BreadcrumbCollapsedButton, _extends({
      focusRipple: true
    }, props, {
      ownerState,
      children: (0, import_jsx_runtime2.jsx)(BreadcrumbCollapsedIcon, {
        ownerState
      })
    }))
  });
}
var React2, import_prop_types, import_jsx_runtime2, BreadcrumbCollapsedButton, BreadcrumbCollapsedIcon, BreadcrumbCollapsed_default;
var init_BreadcrumbCollapsed = __esm({
  "node_modules/.pnpm/@mui+material@5.11.4_@emotion+react@11.10.5_@emotion+styled@11.10.5_@types+react@18.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js"() {
    init_extends();
    React2 = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    init_esm2();
    init_styled();
    init_MoreHoriz();
    init_ButtonBase();
    import_jsx_runtime2 = __toESM(require_jsx_runtime());
    BreadcrumbCollapsedButton = styled_default(ButtonBase_default)(({
      theme
    }) => _extends({
      display: "flex",
      marginLeft: `calc(${theme.spacing(1)} * 0.5)`,
      marginRight: `calc(${theme.spacing(1)} * 0.5)`
    }, theme.palette.mode === "light" ? {
      backgroundColor: theme.palette.grey[100],
      color: theme.palette.grey[700]
    } : {
      backgroundColor: theme.palette.grey[700],
      color: theme.palette.grey[100]
    }, {
      borderRadius: 2,
      "&:hover, &:focus": _extends({}, theme.palette.mode === "light" ? {
        backgroundColor: theme.palette.grey[200]
      } : {
        backgroundColor: theme.palette.grey[600]
      }),
      "&:active": _extends({
        boxShadow: theme.shadows[0]
      }, theme.palette.mode === "light" ? {
        backgroundColor: emphasize(theme.palette.grey[200], 0.12)
      } : {
        backgroundColor: emphasize(theme.palette.grey[600], 0.12)
      })
    }));
    BreadcrumbCollapsedIcon = styled_default(MoreHoriz_default)({
      width: 24,
      height: 16
    });
    true ? BreadcrumbCollapsed.propTypes = {
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types.default.object
    } : void 0;
    BreadcrumbCollapsed_default = BreadcrumbCollapsed;
  }
});

// node_modules/.pnpm/@mui+material@5.11.4_@emotion+react@11.10.5_@emotion+styled@11.10.5_@types+react@18.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js
function getBreadcrumbsUtilityClass(slot) {
  return generateUtilityClass("MuiBreadcrumbs", slot);
}
var breadcrumbsClasses, breadcrumbsClasses_default;
var init_breadcrumbsClasses = __esm({
  "node_modules/.pnpm/@mui+material@5.11.4_@emotion+react@11.10.5_@emotion+styled@11.10.5_@types+react@18.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js"() {
    init_esm();
    init_generateUtilityClass();
    breadcrumbsClasses = generateUtilityClasses("MuiBreadcrumbs", ["root", "ol", "li", "separator"]);
    breadcrumbsClasses_default = breadcrumbsClasses;
  }
});

// node_modules/.pnpm/@mui+material@5.11.4_@emotion+react@11.10.5_@emotion+styled@11.10.5_@types+react@18.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js
function insertSeparators(items, className, separator, ownerState) {
  return items.reduce((acc, current, index) => {
    if (index < items.length - 1) {
      acc = acc.concat(current, (0, import_jsx_runtime3.jsx)(BreadcrumbsSeparator, {
        "aria-hidden": true,
        className,
        ownerState,
        children: separator
      }, `separator-${index}`));
    } else {
      acc.push(current);
    }
    return acc;
  }, []);
}
var React3, import_react_is, import_prop_types2, import_jsx_runtime3, _excluded, useUtilityClasses, BreadcrumbsRoot, BreadcrumbsOl, BreadcrumbsSeparator, Breadcrumbs, Breadcrumbs_default;
var init_Breadcrumbs = __esm({
  "node_modules/.pnpm/@mui+material@5.11.4_@emotion+react@11.10.5_@emotion+styled@11.10.5_@types+react@18.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    React3 = __toESM(require_react());
    import_react_is = __toESM(require_react_is());
    import_prop_types2 = __toESM(require_prop_types());
    init_clsx_m();
    init_esm();
    init_base();
    init_styled();
    init_useThemeProps();
    init_Typography();
    init_BreadcrumbCollapsed();
    init_breadcrumbsClasses();
    import_jsx_runtime3 = __toESM(require_jsx_runtime());
    _excluded = ["children", "className", "component", "expandText", "itemsAfterCollapse", "itemsBeforeCollapse", "maxItems", "separator"];
    useUtilityClasses = (ownerState) => {
      const {
        classes
      } = ownerState;
      const slots = {
        root: ["root"],
        li: ["li"],
        ol: ["ol"],
        separator: ["separator"]
      };
      return composeClasses(slots, getBreadcrumbsUtilityClass, classes);
    };
    BreadcrumbsRoot = styled_default(Typography_default, {
      name: "MuiBreadcrumbs",
      slot: "Root",
      overridesResolver: (props, styles) => {
        return [{
          [`& .${breadcrumbsClasses_default.li}`]: styles.li
        }, styles.root];
      }
    })({});
    BreadcrumbsOl = styled_default("ol", {
      name: "MuiBreadcrumbs",
      slot: "Ol",
      overridesResolver: (props, styles) => styles.ol
    })({
      display: "flex",
      flexWrap: "wrap",
      alignItems: "center",
      padding: 0,
      margin: 0,
      listStyle: "none"
    });
    BreadcrumbsSeparator = styled_default("li", {
      name: "MuiBreadcrumbs",
      slot: "Separator",
      overridesResolver: (props, styles) => styles.separator
    })({
      display: "flex",
      userSelect: "none",
      marginLeft: 8,
      marginRight: 8
    });
    Breadcrumbs = React3.forwardRef(function Breadcrumbs2(inProps, ref) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiBreadcrumbs"
      });
      const {
        children,
        className,
        component = "nav",
        expandText = "Show path",
        itemsAfterCollapse = 1,
        itemsBeforeCollapse = 1,
        maxItems = 8,
        separator = "/"
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
      const [expanded, setExpanded] = React3.useState(false);
      const ownerState = _extends({}, props, {
        component,
        expanded,
        expandText,
        itemsAfterCollapse,
        itemsBeforeCollapse,
        maxItems,
        separator
      });
      const classes = useUtilityClasses(ownerState);
      const listRef = React3.useRef(null);
      const renderItemsBeforeAndAfter = (allItems2) => {
        const handleClickExpand = () => {
          setExpanded(true);
          const focusable = listRef.current.querySelector("a[href],button,[tabindex]");
          if (focusable) {
            focusable.focus();
          }
        };
        if (itemsBeforeCollapse + itemsAfterCollapse >= allItems2.length) {
          if (true) {
            console.error(["MUI: You have provided an invalid combination of props to the Breadcrumbs.", `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join("\n"));
          }
          return allItems2;
        }
        return [...allItems2.slice(0, itemsBeforeCollapse), (0, import_jsx_runtime3.jsx)(BreadcrumbCollapsed_default, {
          "aria-label": expandText,
          onClick: handleClickExpand
        }, "ellipsis"), ...allItems2.slice(allItems2.length - itemsAfterCollapse, allItems2.length)];
      };
      const allItems = React3.Children.toArray(children).filter((child) => {
        if (true) {
          if ((0, import_react_is.isFragment)(child)) {
            console.error(["MUI: The Breadcrumbs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
          }
        }
        return React3.isValidElement(child);
      }).map((child, index) => (0, import_jsx_runtime3.jsx)("li", {
        className: classes.li,
        children: child
      }, `child-${index}`));
      return (0, import_jsx_runtime3.jsx)(BreadcrumbsRoot, _extends({
        ref,
        component,
        color: "text.secondary",
        className: clsx_m_default(classes.root, className),
        ownerState
      }, other, {
        children: (0, import_jsx_runtime3.jsx)(BreadcrumbsOl, {
          className: classes.ol,
          ref: listRef,
          ownerState,
          children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)
        })
      }));
    });
    true ? Breadcrumbs.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit the d.ts file and run "yarn proptypes"     |
      // ----------------------------------------------------------------------
      /**
       * The content of the component.
       */
      children: import_prop_types2.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types2.default.object,
      /**
       * @ignore
       */
      className: import_prop_types2.default.string,
      /**
       * The component used for the root node.
       * Either a string to use a HTML element or a component.
       */
      component: import_prop_types2.default.elementType,
      /**
       * Override the default label for the expand button.
       *
       * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).
       * @default 'Show path'
       */
      expandText: import_prop_types2.default.string,
      /**
       * If max items is exceeded, the number of items to show after the ellipsis.
       * @default 1
       */
      itemsAfterCollapse: integerPropType_default,
      /**
       * If max items is exceeded, the number of items to show before the ellipsis.
       * @default 1
       */
      itemsBeforeCollapse: integerPropType_default,
      /**
       * Specifies the maximum number of breadcrumbs to display. When there are more
       * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`
       * will be shown, with an ellipsis in between.
       * @default 8
       */
      maxItems: integerPropType_default,
      /**
       * Custom separator node.
       * @default '/'
       */
      separator: import_prop_types2.default.node,
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.object, import_prop_types2.default.bool])), import_prop_types2.default.func, import_prop_types2.default.object])
    } : void 0;
    Breadcrumbs_default = Breadcrumbs;
  }
});

// node_modules/.pnpm/@mui+material@5.11.4_@emotion+react@11.10.5_@emotion+styled@11.10.5_@types+react@18.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Breadcrumbs/index.js
var init_Breadcrumbs2 = __esm({
  "node_modules/.pnpm/@mui+material@5.11.4_@emotion+react@11.10.5_@emotion+styled@11.10.5_@types+react@18.0.26_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Breadcrumbs/index.js"() {
    init_Breadcrumbs();
    init_breadcrumbsClasses();
    init_breadcrumbsClasses();
  }
});

export {
  getBreadcrumbsUtilityClass,
  breadcrumbsClasses_default,
  Breadcrumbs_default,
  init_Breadcrumbs2 as init_Breadcrumbs
};
//# sourceMappingURL=chunk-4LVENLW4.js.map
